{"version":3,"sources":["assets/images/logo.png","config/menuConfig.js","redux/action-type.js","api/ajax.js","api/index.js","utils/storageUtils.js","redux/actions.js","components/left-nav/left-nav.jsx","components/link-button/index.jsx","utils/dateUtils.js","components/header/header.jsx","pages/home/line.jsx","pages/home/bar.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","utils/constants.js","utils/memoryUtils.js","pages/product/home.jsx","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/role/add-form.jsx","pages/role/auth-from.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/order/order.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","pages/login/login.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["menuList","title","key","icon","isPublic","children","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","ajax","url","data","method","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","console","log","message","reqLogin","username","password","reqCategorys","parentId","BASE","reqAddCategory","categoryName","reqCategory","categoryId","reqProducts","pageNum","pageSize","reqUpdateStatus","productId","status","reqSearchProducts","searchName","searchType","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","user","reqWeather","city","jsonp","err","results","weather_data","dayPictureUrl","weather","USER_KEY","store","set","remove","setHeadTitle","headTitle","type","recevieUser","logout","storageUtils","SubMenu","IconFont","createFromIconfontCN","scriptUrl","LeftNav","props","hasAuth","item","menus","indexOf","find","child","getMenuNodes_map","map","getMenuNodes","Item","to","path","location","pathname","reduce","pre","cItem","openKey","push","onClick","menuNodes","this","className","src","logo","alt","selectedKeys","defaultOpenKeys","mode","theme","Component","connect","state","withRouter","LinkButton","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","currentTime","now","getTime","interValID","setInterval","setState","getWeather","a","getTitle","forEach","confirm","content","okText","cancelText","onOk","onCancel","info","clearInterval","Line","dv","DataSet","createView","source","month","b","c","transform","fields","value","style","float","width","height","scale","range","forceFit","label","formatter","val","crosshairs","position","size","color","shape","stroke","lineWidth","React","Bar","marginLeft","year","sales","tickInterval","dateFormat","RangePicker","Home","isVisited","handleChange","extra","headStyle","suffix","fontWeight","valueStyle","fontSize","prefix","defaultValue","moment","format","bodyStyle","padding","Option","AddForm","formRef","createRef","setForm","current","categorys","ref","onFinish","addCategory","initialValue","rules","required","placeholder","UpdateForm","setFieldsValue","Category","loading","subCategorys","parentName","showStatus","getCategories","result","showCategorys","showSubCategorys","category","handleCancel","form","resetFields","showAdd","AddCategory","validateFields","getFieldsValue","success","showUpdate","updateCategory","columns","initColumn","dataIndex","render","text","ArrowRightOutlined","marginRight","PlusOutlined","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","BASE_IMG_URL","ProductHome","initColumns","price","newStatus","updateStatus","showDetail","total","products","memoryUtils","history","getProducts","list","onChange","margin","event","target","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","handlePreview","preview","originFileObj","previewImage","previewTitle","substring","lastIndexOf","fileList","length","getImgs","imgs","img","index","uid","action","listType","accept","onPreview","marginTop","footer","RichTextEditor","getDetail","draftToHtml","convertToRaw","editorState","getCurrentContent","onEditorStateChange","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","editorStyle","border","minHeight","maxHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","options","validatorPrice","initOptions","isLeaf","isUpdate","pCategoryId","getCategorys","childOptions","option","loadData","selectedOptions","targetOption","cOptions","handleSubmit","desc","categoryIds","pw","edit","goBack","isupdate","ArrowLeftOutlined","labelCol","span","wrapperCol","autoSize","minRows","maxRows","validator","addonAfter","changeOnSelect","htmlType","ProductDetail","cName1","cName2","all","dangerouslySetInnerHTML","__html","Product","component","exact","propType","PropType","func","AuthForm","object","getTreeNodes","onCheck","checkedKeys","getMenus","treeNodes","readOnly","checkable","defaultExpandAll","treeData","nextProps","prevState","Role","roles","isShowAdd","isShowAuth","create_time","getRoles","onRow","addRole","roleName","res","updateRole","auth","auth_name","auth_time","role_id","replace","disabled","rowSelection","selectedRowKeys","onSelect","userForm","formItemLayout","User","users","isShow","roleNames","deleteUser","initRoleNames","getUsers","ExclamationCircleOutlined","addOrUpdateUser","stores","update","sale","getOptions","tooltip","legend","xAxis","yAxis","series","getOption","Pie","subtext","x","trigger","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","min","max","inRange","colorLightness","sort","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","Order","NotFound","goHome","Footer","Sider","Content","Admin","from","textAlign","Login","getFieldValue","login","validatePwd","rule","test","errorMsg","whitespace","pattern","UserOutlined","LockOutlined","dispath","msg","App","initUser","combineReducers","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.37ffc84f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f6487143.png\";","const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'icon-index-0-copy', // 图标名称\r\n    isPublic: true // 公开页面\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'icon-shangpin',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'icon-leimupinleifenleileibie'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'icon-guanli'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'icon-yonghu'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'icon-jiaose',\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'icon-biaoge',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'icon-tubiaozhuxingtu'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'icon-tubiaoxian_tongyong_tongji'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'icon-tubiao08'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: '订单管理',\r\n    key: '/order',\r\n    icon: 'icon-jiaose',\r\n  }\r\n]\r\nexport default menuList","/**\r\n * 包含n个action的type常量标识名称的模块\r\n */\r\nexport const SET_HEAD_TITLE = 'set_head_title'\r\n// 接收用户信息\r\nexport const RECEIVE_USER = 'receive_user'\r\n// 显示错误信息\r\nexport const SHOW_ERROR_MSG = 'show_error_msg'\r\n// 重置用户信息\r\nexport const RESET_USER = 'reset_user'","/**\r\n * 发送异步请求的模块\r\n * 1. 统一处理请求异常\r\n * 2. 异步直接得到data\r\n */\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\nexport default function ajax (url, data = {}, method = 'GET') {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n    // 1. 执行异步请求\r\n    if (method === 'GET') {\r\n      promise = axios.get(url, {\r\n        params: data\r\n      })\r\n    } else {\r\n      promise = axios.post(url, data)\r\n    }\r\n    promise\r\n      .then(response => {\r\n        // 2. 成功调用resolve\r\n        resolve(response.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(error.message);\r\n        // 3. 失败不调用reject，而是提示异常信息 \r\n        message.error(\"请求出错了：\" + error.message);\r\n\r\n      })\r\n  })\r\n\r\n\r\n};\r\n","/**\r\n * 包含应用中所有接口请求的函数的模块\r\n * 每个函数的返回值都是Promise\r\n */\r\nimport ajax from './ajax'\r\nimport jsonp from 'jsonp'\r\nimport { message } from 'antd'\r\nconst BASE = ''\r\n// 登录\r\nexport const reqLogin = (username, password) => ajax('/login', { username, password }, \"POST\")\r\n// 添加用户\r\nexport const reqAddUser = (user) => ajax('/manage/user/add', user, \"POST\")\r\n\r\n// 获取一级/二级分类的列表\r\nexport const reqCategorys = (parentId) => ajax(BASE + '/manage/category/list', { parentId })\r\n\r\n// 添加分类\r\nexport const reqAddCategory = (categoryName, parentId) => ajax(BASE + '/manage/category/add', { categoryName, parentId }, 'POST')\r\n\r\n// 更新分类\r\nexport const reqUpdateCategory = ({ categoryId, categoryName }) => ajax(BASE + '/manage/category/update', { categoryId, categoryName }, 'POST')\r\n\r\n// 获取一个分类\r\nexport const reqCategory = (categoryId) => ajax(BASE + '/manage/category/info', { categoryId })\r\n\r\n// 获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', { pageNum, pageSize })\r\n\r\n// 更新商品的状态(上架/下架)\r\nexport const reqUpdateStatus = (productId, status) => ajax(BASE + '/manage/product/updateStatus', { productId, status }, 'POST')\r\n\r\n\r\n\r\n/*\r\n搜索商品分页列表 (根据商品名称/商品描述)\r\nsearchType: 搜索的类型, productName/productDesc\r\n */\r\nexport const reqSearchProducts = ({ pageNum, pageSize, searchName, searchType }) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\n\r\n// 搜索商品分页列表 (根据商品描述)\r\n/*export const reqSearchProducts2 = ({pageNum, pageSize, searchName}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  productDesc: searchName,\r\n})*/\r\n\r\n// 删除指定名称的图片\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete', { name }, 'POST')\r\n\r\n// 添加/修改商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + '/manage/product/' + (product._id ? 'update' : 'add'), product, 'POST')\r\n// 修改商品\r\n// export const reqUpdateProduct = (product) => ajax(BASE + '/manage/product/update', product, 'POST')\r\n\r\n\r\n// 获取所有角色的列表\r\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE + '/manage/role/add', { roleName }, 'POST')\r\n// 添加角色\r\nexport const reqUpdateRole = (role) => ajax(BASE + '/manage/role/update', role, 'POST')\r\n\r\n\r\n// 获取所有用户的列表\r\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\r\n// 删除指定用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete', { userId }, 'POST')\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/' + (user._id ? 'update' : 'add'), user, 'POST')\r\n\r\n\r\n/*\r\njson请求的接口请求函数\r\n */\r\nexport const reqWeather = (city) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    // 发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      console.log('jsonp()', err, data)\r\n      // 如果成功了\r\n      if (!err && data.status === 'success') {\r\n        // 取出需要的数据\r\n        const { dayPictureUrl, weather } = data.results[0].weather_data[0]\r\n        resolve({ dayPictureUrl, weather })\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败!')\r\n      }\r\n\r\n    })\r\n  })\r\n}","/**\r\n * local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER_KEY = 'user_key'\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  // 1. 保存user\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    store.set(USER_KEY, user)\r\n  },\r\n  // 2. 读取user\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n  // 3. 删除user\r\n  removeUser () {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY)\r\n  }\r\n}","/**\r\n * 包含n个action creator函数的模块\r\n * 同步：对象{}\r\n * 异步：thunk\r\n */\r\nimport { SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG, RESET_USER } from './action-type'\r\nimport { reqLogin } from '../api'\r\nimport storageUtils from '../utils/storageUtils'\r\n//  设置头部标题的同步action\r\nexport const setHeadTitle = (headTitle) => ({ type: SET_HEAD_TITLE, data: headTitle })\r\n\r\n// 接收用户的同步action\r\nexport const recevieUser = (user) => ({ type: RECEIVE_USER, user })\r\n\r\n// 显示错误信息的同步action\r\nexport const showErrorMsg = (errorMsg) => ({ type: SHOW_ERROR_MSG, errorMsg })\r\n\r\n// 登录的异步action\r\nexport const login = (username, password) => {\r\n  return async dispath => {\r\n    // 1. 执行异步ajax请求\r\n    const result = await reqLogin(username, password)\r\n    if (result.status === 0) {\r\n      // 2.1 成功=>分发 成功的同步action\r\n      const user = result.data\r\n      // 保存到local中\r\n      storageUtils.saveUser(user)\r\n      // 分发接收用户的同步action\r\n      dispath(recevieUser(user))\r\n    } else {\r\n      // 2.2 失败=>分发 失败的同步action\r\n      const msg = result.msg\r\n      // message.error(msg)\r\n      dispath(showErrorMsg(msg))\r\n    }\r\n  }\r\n}\r\n\r\n// 退出登录同步\r\nexport const logout = () => {\r\n  // 删除local中的user\r\n  storageUtils.removeUser()\r\n  return { type: RESET_USER }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { createFromIconfontCN } from '@ant-design/icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Menu } from 'antd'\r\n\r\nimport './index.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport menuList from '../../config/menuConfig.js'\r\n// import memoryUtils from '../../utils/memoryUtils'\r\nimport { setHeadTitle } from '../../redux/actions'\r\n// 子集菜单\r\nconst { SubMenu } = Menu\r\n// 阿里iconfont\r\nconst IconFont = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2208178_anairh40jgh.js'\r\n})\r\n// 左侧导航组件\r\n\r\nclass LeftNav extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.menuNodes = this.getMenuNodes(menuList)\r\n  }\r\n  // 判断当前登录用户是否有权限\r\n  hasAuth = (item) => {\r\n    const { key, isPublic } = item\r\n    const menus = this.props.user.role.menus\r\n    const username = this.props.user.username\r\n    if (username === 'admin' || isPublic || menus.indexOf(key) !== -1) {\r\n      return true\r\n    } else if (item.children) {\r\n      return !!item.children.find((child) => menus.indexOf(child.key) !== -1)\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  // 根据menu的数据数组生成对应的标签数组\r\n  getMenuNodes_map = (menuList) => {\r\n    return menuList.map((item) => {\r\n      if (!item.children) {\r\n        return (\r\n          <Menu.Item key={item.key}>\r\n            <IconFont type={item.icon} />\r\n            <Link to={item.key}>{item.title}</Link>\r\n          </Menu.Item>\r\n        )\r\n      } else {\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={item.title}\r\n            icon={<IconFont type={item.icon} />}\r\n          >\r\n            {/* 递归调用 */}\r\n            {this.getMenuNodes(item.children)}\r\n          </SubMenu>\r\n        )\r\n      }\r\n    })\r\n  }\r\n  getMenuNodes = (menuList) => {\r\n    const path = this.props.location.pathname\r\n    return menuList.reduce((pre, item) => {\r\n      if (this.hasAuth(item)) {\r\n        if (!item.children) {\r\n          // 当前要显示的item\r\n          if (item.key === path || path.indexOf(item.key) === 0) {\r\n            this.props.setHeadTitle(item.title)\r\n          }\r\n          // 向pre中添加\r\n          pre.push(\r\n            <Menu.Item key={item.key}>\r\n              <IconFont type={item.icon} />\r\n              <Link\r\n                to={item.key}\r\n                onClick={() => this.props.setHeadTitle(item.title)}\r\n              >\r\n                {item.title}\r\n              </Link>\r\n            </Menu.Item>\r\n          )\r\n        } else {\r\n          const cItem = item.children.find(\r\n            (cItem) => path.indexOf(cItem.key) === 0\r\n          )\r\n          // 如果存在\r\n          if (cItem) this.openKey = item.key\r\n\r\n          pre.push(\r\n            <SubMenu\r\n              key={item.key}\r\n              title={item.title}\r\n              icon={<IconFont type={item.icon} />}\r\n            >\r\n              {/* 递归调用 */}\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          )\r\n        }\r\n      }\r\n\r\n      return pre\r\n    }, [])\r\n  }\r\n  render() {\r\n    // const menuNodes = this.getMenuNodes(menuList)\r\n    let path = this.props.location.pathname\r\n    // 需要打开菜单的key\r\n    const openKey = this.openKey\r\n    if (path.indexOf('/product') === 0) {\r\n      path = '/product'\r\n    }\r\n    return (\r\n      <div className='left-nav'>\r\n        <Link className='left-nav-header' to='/home'>\r\n          <img src={logo} alt='logo' />\r\n          <h1>谷粒后台</h1>\r\n        </Link>\r\n        <Menu\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n          mode='inline'\r\n          theme='dark'\r\n        >\r\n          {this.menuNodes}\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n// 通过使用withRouter包装获取路由\r\nexport default connect((state) => ({ user: state.user }), { setHeadTitle })(\r\n  withRouter(LeftNav)\r\n)\r\n","import React from 'react'\r\nimport './index.less'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport LinkButton from '../link-button'\r\nimport { formateDate } from '../../utils/dateUtils'\r\n// import memoryUtils from '../../utils/memoryUtils.js'\r\n// import storageUtils from '../../utils/storageUtils'\r\nimport { reqWeather } from '../../api/index'\r\nimport menuList from '../../config/menuConfig'\r\nimport './index.less'\r\nimport { message, Modal } from 'antd'\r\n\r\nimport { logout } from '../../redux/actions'\r\n// 顶部组件\r\nclass Header extends Component {\r\n  state = {\r\n    currentTime: formateDate(Date.now()),\r\n    dayPictureUrl: '', // 天气的图片\r\n    weather: '' // 天气的文本\r\n  }\r\n\r\n  getTime = () => {\r\n    this.interValID = setInterval(() => {\r\n      const currentTime = formateDate(Date.now())\r\n      this.setState({ currentTime })\r\n    }, 1000)\r\n  }\r\n  getWeather = async () => {\r\n    const { dayPictureUrl, weather } = await reqWeather('保定')\r\n    this.setState({ dayPictureUrl, weather })\r\n  }\r\n  componentDidMount() {\r\n    // 第一次render之后执行\r\n    // 一般在此执行异步操作\r\n    this.getTime()\r\n    // 获取当前天气显示\r\n    this.getWeather()\r\n  }\r\n  // 当前组件卸载之前调用\r\n  componentWillUnmount() {\r\n    // 清除定时器\r\n    clearInterval(this.interValID)\r\n  }\r\n  getTitle = () => {\r\n    // 得到当前请求路径\r\n    const path = this.props.location.pathname\r\n    let title\r\n    menuList.forEach((item) => {\r\n      if (item.key === path) {\r\n        // 如果当前item对象的key与path一样,item的title就是需要显示的title\r\n        title = item.title\r\n      } else if (item.children) {\r\n        // 在所有子item中查找匹配的\r\n        const cItem = item.children.find(\r\n          (cItem) => path.indexOf(cItem.key) === 0\r\n        )\r\n        // 如果有值才说明有匹配的\r\n        if (cItem) {\r\n          // 取出它的title\r\n          title = cItem.title\r\n        }\r\n      }\r\n    })\r\n    return title\r\n  }\r\n  // 退出\r\n  logout = () => {\r\n    Modal.confirm({\r\n      title: 'Confirm',\r\n      // icon: <ExclamationCircleOutlined />,\r\n      content: 'Bla bla ...',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        this.props.logout()\r\n        /*\r\n        // 删除localStore数据和内存中的数据\r\n        storageUtils.removeUser()\r\n        memoryUtils.user = {}\r\n         */\r\n        // 跳转到Login\r\n        // this.props.history.replace('/login')\r\n      },\r\n      onCancel() {\r\n        message.info('没有退出！')\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    const { currentTime, dayPictureUrl, weather } = this.state\r\n    const username = this.props.user.username\r\n    // const title = this.getTitle()\r\n    const title = this.props.headTitle\r\n    return (\r\n      <div className='header'>\r\n        <div className='header-top'>\r\n          <span>欢迎, {username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className='header-bottom'>\r\n          <div className='header-bottom-left'>{title}</div>\r\n          <div className='header-bottom-right'>\r\n            <span>{currentTime}</span>\r\n            <img src={dayPictureUrl} alt='weather' />\r\n            <span>{weather}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({ headTitle: state.headTitle, user: state.user }),\r\n  { logout }\r\n)(withRouter(Header))\r\n","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"bizcharts\"\r\nimport DataSet from \"@antv/data-set\"\r\n\r\nexport default class Line extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5\r\n      },\r\n      {\r\n        month: \"May\",\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9\r\n      }\r\n    ]\r\n    const ds = new DataSet()\r\n    const dv = ds.createView().source(data)\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"a\", \"b\", \"c\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key字段\r\n      value: \"temperature\" // value字段\r\n    })\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    }\r\n    return (\r\n      <div style={{float: 'right', width: 750, height: 300}}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend/>\r\n          <Axis name=\"month\"/>\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: val => `${val}万个`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n} from \"bizcharts\"\r\n\r\nexport default class Bar extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"1月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"2月\",\r\n        sales: 52\r\n      },\r\n      {\r\n        year: \"3月\",\r\n        sales: 61\r\n      },\r\n      {\r\n        year: \"4月\",\r\n        sales: 145\r\n      },\r\n      {\r\n        year: \"5月\",\r\n        sales: 48\r\n      },\r\n      {\r\n        year: \"6月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"7月\",\r\n        sales: 28\r\n      },\r\n      {\r\n        year: \"8月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"59月\",\r\n        sales: 68\r\n      },\r\n      {\r\n        year: \"10月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"11月\",\r\n        sales: 58\r\n      },\r\n      {\r\n        year: \"12月\",\r\n        sales: 38\r\n      }\r\n    ]\r\n    const cols = {\r\n      sales: {\r\n        tickInterval: 20\r\n      }\r\n    }\r\n    return (\r\n      <div style={{width: '100%', marginLeft: -30}}>\r\n        <Chart height={338} data={data} scale={cols} forceFit>\r\n          <Axis name=\"year\"/>\r\n          <Axis name=\"sales\"/>\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom type=\"interval\" position=\"year*sales\"/>\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Icon, Card, Statistic, DatePicker, Timeline } from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport Line from './line'\r\nimport Bar from './bar'\r\nimport './home.less'\r\n\r\nconst dateFormat = 'YYYY/MM/DD'\r\nconst { RangePicker } = DatePicker\r\n\r\nexport default class Home extends Component {\r\n  state = {\r\n    isVisited: true\r\n  }\r\n\r\n  handleChange = (isVisited) => {\r\n    return () => this.setState({ isVisited })\r\n  }\r\n\r\n  render() {\r\n    const { isVisited } = this.state\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Card\r\n          className='home-card'\r\n          title='商品总量'\r\n          extra={\r\n            <Icon style={{ color: 'rgba(0,0,0,.45)' }} type='question-circle' />\r\n          }\r\n          style={{ width: 250 }}\r\n          headStyle={{ color: 'rgba(0,0,0,.45)' }}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix='个'\r\n            style={{ fontWeight: 'bolder' }}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{ fontSize: 15 }}\r\n            prefix={'周同比'}\r\n            suffix={\r\n              <div>\r\n                %\r\n                <Icon\r\n                  style={{ color: 'red', marginLeft: 10 }}\r\n                  type='arrow-down'\r\n                />\r\n              </div>\r\n            }\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{ fontSize: 15 }}\r\n            prefix={'日同比'}\r\n            suffix={\r\n              <div>\r\n                %\r\n                <Icon\r\n                  style={{ color: '#3f8600', marginLeft: 10 }}\r\n                  type='arrow-up'\r\n                />\r\n              </div>\r\n            }\r\n          />\r\n        </Card>\r\n\r\n        <Line />\r\n\r\n        <Card\r\n          className='home-content'\r\n          title={\r\n            <div className='home-menu'>\r\n              <span\r\n                className={\r\n                  isVisited\r\n                    ? 'home-menu-active home-menu-visited'\r\n                    : 'home-menu-visited'\r\n                }\r\n                onClick={this.handleChange(true)}\r\n              >\r\n                访问量\r\n              </span>\r\n              <span\r\n                className={isVisited ? '' : 'home-menu-active'}\r\n                onClick={this.handleChange(false)}\r\n              >\r\n                销售量\r\n              </span>\r\n            </div>\r\n          }\r\n          extra={\r\n            <RangePicker\r\n              defaultValue={[\r\n                moment('2019/01/01', dateFormat),\r\n                moment('2019/06/01', dateFormat)\r\n              ]}\r\n              format={dateFormat}\r\n            />\r\n          }\r\n        >\r\n          <Card\r\n            className='home-table-left'\r\n            title={isVisited ? '访问趋势' : '销售趋势'}\r\n            bodyStyle={{ padding: 0, height: 275 }}\r\n            extra={<Icon type='reload' />}\r\n          >\r\n            <Bar />\r\n          </Card>\r\n\r\n          <Card\r\n            title='任务'\r\n            extra={<Icon type='reload' />}\r\n            className='home-table-right'\r\n          >\r\n            <Timeline>\r\n              <Timeline.Item color='green'>新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color='green'>完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color='red'>\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Select, Input } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nconst Option = Select.Option\r\nexport default class AddForm extends Component {\r\n  formRef = React.createRef()\r\n  static propTypes = {\r\n    // 一级分类数组\r\n    categorys: PropTypes.array.isRequired,\r\n    // 父分类ID\r\n    parentId: PropTypes.string.isRequired,\r\n    // 传递form对象\r\n    setForm: PropTypes.func\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setForm(this.formRef.current)\r\n  }\r\n  render() {\r\n    const { categorys, parentId } = this.props\r\n    return (\r\n      <Form ref={this.formRef} onFinish={this.addCategory}>\r\n        <Form.Item name='parentId' initialValue={parentId}>\r\n          <Select style={{ width: '100%' }}>\r\n            <Option value='0'>一级分类</Option>\r\n            {categorys.map((item) => {\r\n              return (\r\n                <Option key={item._id} value={item._id}>\r\n                  {item.name}\r\n                </Option>\r\n              )\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入名称'\r\n            }\r\n          ]}\r\n          name='categoryName'\r\n        >\r\n          <Input placeholder='请输入分类名称' />\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Select, Input, Button } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class UpdateForm extends Component {\r\n  static propTypes = {\r\n    categoryName: PropTypes.string,\r\n    setForm: PropTypes.func.isRequired\r\n  }\r\n  formRef = React.createRef()\r\n\r\n  componentDidMount() {\r\n    // console.log(this.props)\r\n    // 将form对象通过setForm传递给父组件\r\n    // this.props.categoryName = this.formRef.current.getFieldValue('name')\r\n    // console.log(this.formRef.current)\r\n    // this.formRef.current.resetFields()\r\n\r\n    this.props.setForm(this.formRef.current)\r\n    this.formRef.current.setFieldsValue({\r\n      name: this.props.categoryName\r\n    })\r\n  }\r\n  componentDidUpdate() {\r\n    this.formRef.current.setFieldsValue({\r\n      name: this.props.categoryName\r\n    })\r\n  }\r\n  render() {\r\n    const { categoryName } = this.props\r\n\r\n    return (\r\n      <Form ref={this.formRef} onFinish={this.addCategory}>\r\n        <Form.Item\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入名称'\r\n            }\r\n          ]}\r\n          name='name'\r\n          initialValue={categoryName}\r\n        >\r\n          <Input placeholder='请输入分类名称' />\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { PlusOutlined, ArrowRightOutlined } from '@ant-design/icons'\r\n\r\nimport { Card, Table, Button, message, Modal } from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport AddForm from './add-form'\r\n\r\nimport UpdateForm from './update-form'\r\nimport {\r\n  reqAddCategory,\r\n  reqUpdateCategory,\r\n  reqCategorys\r\n} from '../../api/index'\r\n// 分类路由\r\nexport default class Category extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.columns = this.initColumn()\r\n  }\r\n  state = {\r\n    loading: false, // 是否正在获取数据中\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [], // 二级分类列表\r\n    parentId: '0', // 当前需要显示的分类列表的父分类ID\r\n    parentName: '', // 当前需要显示的分类列表的父分类名称\r\n    showStatus: 0 // 标识添加/更新的确认框是否显示, 0: 都不显示, 1: 显示添加, 2: 显示更新\r\n  }\r\n  // 定义列名\r\n  initColumn() {\r\n    return [\r\n      {\r\n        title: '分类名称',\r\n        dataIndex: 'name',\r\n        key: '_id'\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: 'age',\r\n        key: '_id',\r\n        width: 300,\r\n        // 返回需要显示的样式\r\n        render: (text, category) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(category)}>\r\n              修改\r\n            </LinkButton>\r\n            {this.state.parentId === '0' ? (\r\n              <LinkButton\r\n                onClick={() => {\r\n                  this.showSubCategorys(category)\r\n                }}\r\n              >\r\n                查看二级分类\r\n              </LinkButton>\r\n            ) : null}\r\n          </span>\r\n        )\r\n      }\r\n    ]\r\n  }\r\n  // 发送异步请求获取数据\r\n  getCategories = async (parentId) => {\r\n    this.setState({ loading: true })\r\n    parentId = parentId || this.state.parentId\r\n    const result = await reqCategorys(parentId)\r\n    this.setState({ loading: false })\r\n    if (result.status !== 0) return message.error('获取列表失败')\r\n    const categorys = result.data\r\n    if (parentId === '0') {\r\n      this.setState({ categorys })\r\n    } else {\r\n      this.setState({ subCategorys: categorys })\r\n    }\r\n  }\r\n  // 获取一级分类列表\r\n  showCategorys = () => {\r\n    // 先更新状态在调用\r\n    this.setState(\r\n      {\r\n        parentId: '0',\r\n        subCategorys: [],\r\n        parentName: ''\r\n      },\r\n      // setState为异步,因此需要使用回调函数\r\n      () => {\r\n        this.getCategories()\r\n      }\r\n    )\r\n  }\r\n  // 获取指定分类下的二级分类\r\n  showSubCategorys = (category) => {\r\n    // 先更新状态在调用\r\n    this.setState(\r\n      {\r\n        parentId: category._id,\r\n        parentName: category.name\r\n      },\r\n      // setState为异步,因此需要使用回调函数\r\n      () => {\r\n        this.getCategories()\r\n      }\r\n    )\r\n  }\r\n  // 取消添加分类或更新分类的对话框\r\n  handleCancel = () => {\r\n    // 重置表单字段\r\n    this.form.resetFields()\r\n    this.setState({\r\n      showStatus: 0\r\n    })\r\n  }\r\n  // 显示添加的对话框\r\n  showAdd = () => {\r\n    console.log(this.form, 1)\r\n    if (this.form) {\r\n      this.form.resetFields()\r\n    }\r\n    this.setState({\r\n      showStatus: 1\r\n    })\r\n  }\r\n  // 添加分类\r\n  AddCategory = async () => {\r\n    this.form\r\n      .validateFields()\r\n      .then(async (result) => {\r\n        const { parentId, categoryName } = this.form.getFieldsValue()\r\n\r\n        // this.form.resetFields()\r\n        const { status } = await reqAddCategory(categoryName, parentId)\r\n        if (status !== 0) return message.error('错误了！')\r\n        message.success('添加成功！')\r\n        this.handleCancel()\r\n        this.getCategories()\r\n      })\r\n      .catch((err) => {\r\n        message.error('请填写哦！')\r\n      })\r\n  }\r\n  /** 更新相关 */\r\n\r\n  // 显示更新的对话框\r\n  showUpdate = (category) => {\r\n    this.category = category\r\n    this.setState({\r\n      showStatus: 2\r\n    })\r\n  }\r\n  // 更新分类\r\n  updateCategory = async () => {\r\n    this.form\r\n      .validateFields()\r\n      .then(async (result) => {\r\n        console.log(result)\r\n        // 发送请求\r\n        const categoryId = this.category._id\r\n        const categoryName = result.name\r\n        // const categoryName = this.category.name\r\n\r\n        const { status } = await reqUpdateCategory({ categoryId, categoryName })\r\n        if (status !== 0) return message.error('错误了！')\r\n\r\n        message.success('修改成功！')\r\n        // 隐藏对话框\r\n        this.handleCancel()\r\n        // 重新获取列表\r\n        this.getCategories()\r\n      })\r\n      .catch((err) => {\r\n        message.error('错误了！')\r\n      })\r\n  }\r\n  componentDidMount() {\r\n    // 获取一级分类列表\r\n    this.getCategories()\r\n  }\r\n  render() {\r\n    const {\r\n      categorys,\r\n      loading,\r\n      parentId,\r\n      parentName,\r\n      subCategorys,\r\n      showStatus\r\n    } = this.state\r\n    // card的左侧标题\r\n    const title =\r\n      parentId === '0' ? (\r\n        '一级分类列表'\r\n      ) : (\r\n        <span>\r\n          <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n          <ArrowRightOutlined style={{ marginRight: 5 }} />\r\n          <span>{parentName}</span>\r\n        </span>\r\n      )\r\n    // card的右侧按钮\r\n    const extra = (\r\n      <Button icon={<PlusOutlined />} type='primary' onClick={this.showAdd}>\r\n        添加分类\r\n      </Button>\r\n    )\r\n    // 读取指定分类\r\n    const category = this.category || {}\r\n    return (\r\n      <div>\r\n        <Card title={title} extra={extra}>\r\n          <Table\r\n            bordered={false}\r\n            rowKey='_id'\r\n            loading={loading}\r\n            dataSource={parentId === '0' ? categorys : subCategorys}\r\n            columns={this.columns}\r\n            pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n          ></Table>\r\n        </Card>\r\n        <Modal\r\n          title='添加分类'\r\n          visible={showStatus === 1}\r\n          onOk={this.AddCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm\r\n            categorys={categorys}\r\n            parentId={parentId}\r\n            setForm={(form) => {\r\n              this.form = form\r\n            }}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title='更新分类'\r\n          visible={showStatus === 2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm\r\n            categoryName={category.name}\r\n            setForm={(form) => {\r\n              this.form = form\r\n            }}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/*\r\n包含一些常量值的模块\r\n */\r\nexport const PAGE_SIZE = 3 // 每页显示的记录数\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' // 上传图片的基础路径","/**\r\n * 用来在内存中保存数据的工具模块\r\n */\r\n\r\nexport default {\r\n  // 当前登录的user\r\n  user: {},\r\n  product: {} // 指定的商品对象\r\n}","import React, { Component } from 'react'\r\nimport { Card, Select, Input, Button, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqProducts, reqSearchProducts, reqUpdateStatus } from '../../api'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\n\r\nconst Option = Select.Option\r\n// product的默认子路由组件\r\nexport default class ProductHome extends Component {\r\n  // 初始化列\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc'\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render: (price) => '¥' + price // 当前指定了对应的属性, 传入的是对应的属性值\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '状态',\r\n        // dataIndex: 'status',\r\n        render: (product) => {\r\n          const { status, _id } = product\r\n          const newStatus = status === 1 ? 2 : 1\r\n          return (\r\n            <span>\r\n              <Button\r\n                type='primary'\r\n                onClick={() => this.updateStatus(_id, newStatus)}\r\n              >\r\n                {status === 1 ? '下架' : '上架'}\r\n              </Button>\r\n              <span>{status === 1 ? '在售' : '已下架'}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '操作',\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              {/*将product对象使用state传递给目标路由组件*/}\r\n              <LinkButton onClick={() => this.showDetail(product)}>\r\n                详情\r\n              </LinkButton>\r\n              <LinkButton onClick={() => this.showUpdate(product)}>\r\n                修改\r\n              </LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  state = {\r\n    total: 0, // 商品的总数量\r\n    products: [], // 商品的数组\r\n    loading: false, // 是否正在加载中\r\n    searchName: '', // 搜索的关键字\r\n    searchType: 'productName' // 根据哪个字段搜索\r\n  }\r\n  showDetail = (product) => {\r\n    memoryUtils.product = product\r\n    this.props.history.push('/product/detail')\r\n  }\r\n  showUpdate = (product) => {\r\n    memoryUtils.product = product\r\n    this.props.history.push('/product/addupdate')\r\n  }\r\n  // 获得商品列表\r\n  getProducts = async (pageNum) => {\r\n    // 记录当前页码数，方便表格在任意页刷新\r\n    this.pageNum = pageNum\r\n    this.setState({ loading: true })\r\n    const { searchName, searchType } = this.state\r\n    let result\r\n    if (searchName) {\r\n      // 搜索\r\n      result = await reqSearchProducts({\r\n        pageNum,\r\n        pageSize: PAGE_SIZE,\r\n        searchName,\r\n        searchType\r\n      })\r\n    } else {\r\n      // 一般分页\r\n      result = await reqProducts(pageNum, PAGE_SIZE)\r\n    }\r\n    this.setState({ loading: false })\r\n    if (result.status !== 0) return message.error('错误')\r\n    const { total, list } = result.data\r\n    this.setState({\r\n      total,\r\n      products: list\r\n    })\r\n  }\r\n  // 更新状态\r\n  updateStatus = async (productId, status) => {\r\n    this.setState({ loading: true })\r\n    const result = await reqUpdateStatus(productId, status)\r\n    this.setState({ loading: false })\r\n    if (result.status !== 0) return message.error('错误')\r\n    message.success('成功了！')\r\n    this.getProducts(this.pageNum)\r\n  }\r\n  componentDidMount() {\r\n    this.getProducts(1)\r\n    this.initColumns()\r\n  }\r\n  render() {\r\n    // 取出状态数据\r\n    const { products, total, loading, searchType, searchName } = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value={searchType}\r\n          style={{ width: 150 }}\r\n          onChange={(value) => this.setState({ searchType: value })}\r\n        >\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder='关键字'\r\n          style={{ width: 150, margin: '0 15px' }}\r\n          value={searchName}\r\n          onChange={(event) =>\r\n            this.setState({ searchName: event.target.value })\r\n          }\r\n        />\r\n        <Button type='primary' onClick={() => this.getProducts(1)}>\r\n          搜索\r\n        </Button>\r\n      </span>\r\n    )\r\n\r\n    const extra = (\r\n      <Button\r\n        type='primary'\r\n        onClick={() => this.props.history.push('/product/addupdate')}\r\n      >\r\n        <PlusOutlined />\r\n        添加商品\r\n      </Button>\r\n    )\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={{\r\n            current: this.pageNum,\r\n            total,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            onChange: this.getProducts\r\n          }}\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Upload, Modal, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport { reqDeleteImg } from '../../api'\r\nimport propTypes from 'prop-types'\r\n\r\nimport { BASE_IMG_URL } from '../../utils/constants.js'\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onload = () => resolve(reader.result)\r\n    reader.onerror = (error) => reject(error)\r\n  })\r\n}\r\n\r\n/**\r\n * 用于图片上传的组件\r\n */\r\n\r\nexport default class PicturesWall extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const { imgs } = this.props\r\n    let fileList = []\r\n    if (imgs && imgs.length > 0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index,\r\n        name: img,\r\n        status: 'done',\r\n        url: BASE_IMG_URL + img\r\n      }))\r\n    }\r\n    this.state = {\r\n      previewVisible: false, // 是否显示大图预览\r\n      previewImage: '', // 图片地址\r\n      previewTitle: '',\r\n      fileList\r\n    }\r\n  }\r\n\r\n  static propTypes = {\r\n    imgs: propTypes.array\r\n  }\r\n  handleCancel = () => this.setState({ previewVisible: false })\r\n\r\n  handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj)\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle:\r\n        file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\r\n    })\r\n  }\r\n  // file：当前操作的图片文件\r\n  // fileList：所有已上传的文件对象\r\n  handleChange = async ({ file, fileList }) => {\r\n    // 一旦上传成功，将当前上传的file的信息修正\r\n    if (file.status === 'done') {\r\n      const result = file.response\r\n      if (result.status === 0) {\r\n        message.success('成功了！')\r\n        const { name, url } = result.data\r\n        file = fileList[fileList.length - 1]\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('失败了！')\r\n      }\r\n    } else if (file.status === 'removed') {\r\n      const result = await reqDeleteImg(file.name)\r\n      if (result.status !== 0) return message.error('删除失败！')\r\n      message.info('删除成功！')\r\n    }\r\n    this.setState({ fileList })\r\n  }\r\n  getImgs = () => {\r\n    return this.state.fileList.map((file) => file.name)\r\n  }\r\n  render() {\r\n    const { previewVisible, previewImage, fileList, previewTitle } = this.state\r\n    return (\r\n      <>\r\n        <Upload\r\n          action='/manage/img/upload'\r\n          listType='picture-card' /**卡片样式 */\r\n          accept='image/*'\r\n          name='image' /**上传图片的字段 */\r\n          fileList={fileList} /**已上传图片的列表 */\r\n          onPreview={this.handlePreview} /**显示图片大图 */\r\n          onChange={this.handleChange}\r\n        >\r\n          <div style={{ marginTop: 8 }}>\r\n            <PlusOutlined />\r\n          </div>\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n          width='100%'\r\n        >\r\n          <img alt='example' style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport PropTypes from 'prop-types'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\nexport default class RichTextEditor extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const html = this.props.detail\r\n    if (html) {\r\n      const contentBlock = htmlToDraft(html)\r\n      const contentState = ContentState.createFromBlockArray(\r\n        contentBlock.contentBlocks\r\n      )\r\n      const editorState = EditorState.createWithContent(contentState)\r\n      this.state = {\r\n        editorState\r\n      }\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty()\r\n      }\r\n    }\r\n  }\r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  }\r\n\r\n  getDetail = () => {\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState\r\n    })\r\n  }\r\n  // 图片上传\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest()\r\n      xhr.open('POST', '/manage/img/upload')\r\n      const data = new FormData()\r\n      data.append('image', file)\r\n      xhr.send(data)\r\n      xhr.addEventListener('load', () => {\r\n        const response = JSON.parse(xhr.responseText)\r\n        const url = response.data.url\r\n        resolve({ data: { link: url } })\r\n      })\r\n      xhr.addEventListener('error', () => {\r\n        const error = JSON.parse(xhr.responseText)\r\n        reject(error)\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    const { editorState } = this.state\r\n\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{\r\n          border: '1px solid black',\r\n          minHeight: 200,\r\n          maxHeight: 500,\r\n          paddingLeft: 10\r\n        }}\r\n        toolbar={{\r\n          image: {\r\n            uploadCallback: this.uploadImageCallBack,\r\n            alt: { present: true, mandatory: true }\r\n          }\r\n        }}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Form, Input, Cascader, Button, message } from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport PicturesWall from './pictures-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqCategorys, reqAddOrUpdateProduct } from '../../api'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\n\r\nconst { Item } = Form\r\nconst { TextArea } = Input\r\n\r\n// Product的添加和更新的子路由组件\r\nexport default class ProductAddUpdate extends Component {\r\n  formRef = React.createRef()\r\n  constructor(props) {\r\n    super(props)\r\n    const product = memoryUtils.product\r\n    // 创建用于保存ref表示的容器\r\n    this.pw = React.createRef()\r\n    this.edit = React.createRef()\r\n    // 保存是否更新的表示\r\n    this.isUpdate = !!product._id\r\n    this.product = product || {}\r\n  }\r\n  state = {\r\n    options: []\r\n  }\r\n\r\n  // 价格的验证规则\r\n  validatorPrice = (item, value) => {\r\n    if (value >= 0 && value <= 999999999) {\r\n      return Promise.resolve()\r\n    } else {\r\n      return Promise.reject('？？？')\r\n    }\r\n  }\r\n  initOptions = async (categorys) => {\r\n    // 根据categorys数组生成options数组\r\n    const options = categorys.map((c) => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false\r\n    }))\r\n    // 如果是一个二级分类商品的更新\r\n    const { isUpdate, product } = this\r\n    const { pCategoryId, categoryId } = product\r\n    if (isUpdate && pCategoryId !== '0') {\r\n      // 获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId)\r\n      // 生成二级下拉列表的options\r\n      const childOptions = subCategorys.map((c) => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n      // 找到当前商品对应的option对象\r\n      const targetOption = options.find(\r\n        (option) => option.value === pCategoryId\r\n      )\r\n      // 关联到对应的一级options\r\n      targetOption.children = childOptions\r\n    }\r\n\r\n    // 更新状态\r\n    this.setState({ options })\r\n  }\r\n  // 获取一级/二级分类列表\r\n  getCategorys = async (parentId) => {\r\n    parentId = parentId || '0'\r\n    const result = await reqCategorys(parentId)\r\n    if (result.status !== 0) return message.error('分类获取失败')\r\n    const categorys = result.data\r\n    // 如果是一级分类\r\n    if (parentId === '0') {\r\n      this.initOptions(categorys)\r\n    } else {\r\n      // 二级列表\r\n      return categorys\r\n    }\r\n  }\r\n  loadData = async (selectedOptions) => {\r\n    // 的到选择的option对象\r\n    const targetOption = selectedOptions[selectedOptions.length - 1]\r\n    // loading效果\r\n    targetOption.loading = true\r\n\r\n    // 根据选中的分类请求获取下一级分类\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    if (subCategorys && subCategorys.length > 0) {\r\n      // 生成二级列表options\r\n      const cOptions = subCategorys.map((c) => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n      // 某一项的下一级列表\r\n      targetOption.children = cOptions\r\n    } else {\r\n      targetOption.isLeaf = true\r\n    }\r\n    targetOption.loading = false\r\n    this.setState({\r\n      options: [...this.state.options]\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategorys()\r\n  }\r\n  componentWillUnmount() {\r\n    memoryUtils.product = {}\r\n  }\r\n  // 表单提交事件\r\n  handleSubmit = () => {\r\n    // 表单对象\r\n    const form = this.formRef.current\r\n    form\r\n      .validateFields()\r\n      .then(async (result) => {\r\n        // 1. 收集数据\r\n        const { name, desc, price, categoryIds } = result\r\n        let pCategoryId, categoryId\r\n        if (categoryIds.length === 1) {\r\n          pCategoryId = 0\r\n          categoryId = categoryIds[0]\r\n        } else {\r\n          pCategoryId = categoryIds[0]\r\n          categoryId = categoryIds[1]\r\n        }\r\n        // 获取图片列表\r\n        let imgs = this.pw.current.getImgs()\r\n        // 获取商品描述\r\n        let detail = this.edit.current.getDetail()\r\n        const product = {\r\n          name,\r\n          desc,\r\n          price,\r\n          imgs,\r\n          detail,\r\n          pCategoryId,\r\n          categoryId\r\n        }\r\n        // 如果是更新 需要添加_id\r\n        if (this.isUpdate) {\r\n          product._id = this.product._id\r\n        }\r\n        // 添加或者更新\r\n        const res = await reqAddOrUpdateProduct(product)\r\n        if (res.status !== 0) return message.error('更新失败')\r\n        message.success(`${this.isUpdate ? '更新' : '添加'}商品成功`)\r\n        this.props.history.goBack()\r\n        // 根据结果提示\r\n        console.log(result)\r\n      })\r\n      .catch()\r\n  }\r\n  render() {\r\n    const isupdate = this.isUpdate\r\n    const title = (\r\n      <span>\r\n        <LinkButton>\r\n          <ArrowLeftOutlined\r\n            style={{ marginRight: 10, fontSize: 20 }}\r\n            onClick={() => this.props.history.goBack()}\r\n          />\r\n        </LinkButton>\r\n        <span>{isupdate ? '修改商品' : '添加商品'}</span>\r\n      </span>\r\n    )\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },\r\n      wrapperCol: { span: 8 }\r\n    }\r\n    const { product, isUpdate } = this\r\n    const { pCategoryId, categoryId, imgs, detail } = product\r\n\r\n    const categoryIds = []\r\n    if (isUpdate) {\r\n      // 商品是一级分类商品\r\n      if (pCategoryId === '0') {\r\n        categoryIds.push(pCategoryId)\r\n      } else {\r\n        // 商品是二级分类商品\r\n        categoryIds.push(pCategoryId)\r\n        categoryIds.push(categoryId)\r\n      }\r\n    }\r\n    return (\r\n      <Card title={title}>\r\n        <Form\r\n          {...formItemLayout}\r\n          ref={this.formRef}\r\n          onFinish={this.handleSubmit}\r\n        >\r\n          <Item\r\n            label='商品名称'\r\n            rules={[{ required: true, message: '请输入商品名称' }]}\r\n            name='name'\r\n            initialValue={product.name}\r\n          >\r\n            <Input placeholder='商品名称' />\r\n          </Item>\r\n          <Item\r\n            label='商品描述'\r\n            name='desc'\r\n            rules={[{ required: true, message: '请输入商品描述' }]}\r\n            initialValue={product.desc}\r\n          >\r\n            <TextArea\r\n              placeholder='商品描述'\r\n              autoSize={{ minRows: 2, maxRows: 5 }}\r\n            />\r\n          </Item>\r\n          <Item\r\n            label='商品价格'\r\n            name='price'\r\n            rules={[\r\n              { required: true, message: '请输入商品价格' },\r\n              { validator: this.validatorPrice }\r\n            ]}\r\n            initialValue={product.price}\r\n          >\r\n            <Input type='number' placeholder='商品价格' addonAfter='元' />\r\n          </Item>\r\n          <Item\r\n            label='商品分类'\r\n            name='categoryIds'\r\n            initialValue={categoryIds}\r\n            rules={[{ required: true, message: '请选择分类' }]}\r\n          >\r\n            <Cascader\r\n              options={this.state.options}\r\n              loadData={this.loadData}\r\n              onChange={this.onChange}\r\n              changeOnSelect\r\n            />\r\n          </Item>\r\n          <Item label='商品图片' name='imgs'>\r\n            <PicturesWall ref={this.pw} imgs={imgs} />\r\n          </Item>\r\n          <Item\r\n            label='商品详情'\r\n            name='detail'\r\n            labelCol={{ span: 2 }}\r\n            wrapperCol={{ span: 20 }}\r\n          >\r\n            <RichTextEditor ref={this.edit} detail={detail} />\r\n          </Item>\r\n          <Item>\r\n            <Button type='primary' htmlType='submit'>\r\n              提交\r\n            </Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, List } from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport LinkButton from '../../components/link-button'\r\nimport { BASE_IMG_URL } from '../../utils/constants'\r\nimport { reqCategory } from '../../api'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\n\r\nconst Item = List.Item\r\n// 商品详情\r\nexport default class ProductDetail extends Component {\r\n  state = {\r\n    cName1: '', // 一级分类名称\r\n    cName2: '' // 二级分类名称\r\n  }\r\n  async componentDidMount() {\r\n    // 得到当前商品的分类ID\r\n    // const { pCategoryId, categoryId } = this.props.location.state.product\r\n    const { pCategoryId, categoryId } = memoryUtils.product\r\n    if (pCategoryId === '0') {\r\n      // 一级分类下的商品\r\n      const result = await reqCategory(categoryId)\r\n      const cName1 = result.data.name\r\n      this.setState({ cName1 })\r\n    } else {\r\n      // 二级分类下的商品\r\n      /*\r\n      //通过多个await方式发多个请求: 后面一个请求是在前一个请求成功返回之后才发送\r\n      const result1 = await reqCategory(pCategoryId) // 获取一级分类列表\r\n      const result2 = await reqCategory(categoryId) // 获取二级分类\r\n      const cName1 = result1.data.name\r\n      const cName2 = result2.data.name\r\n      */\r\n\r\n      // 一次性发送多个请求, 只有都成功了, 才正常处理\r\n      const results = await Promise.all([\r\n        reqCategory(pCategoryId),\r\n        reqCategory(categoryId)\r\n      ])\r\n      const cName1 = results[0].data.name\r\n      const cName2 = results[1].data.name\r\n      this.setState({\r\n        cName1,\r\n        cName2\r\n      })\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    memoryUtils.product = {}\r\n  }\r\n  render() {\r\n    // 读取携带过来的state数据\r\n    const { name, desc, price, detail, imgs } = memoryUtils.product\r\n    const { cName1, cName2 } = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <LinkButton>\r\n          <ArrowLeftOutlined\r\n            style={{ marginRight: 10, fontSize: 20 }}\r\n            onClick={() => this.props.history.goBack()}\r\n          />\r\n        </LinkButton>\r\n\r\n        <span>商品详情</span>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title} className='product-detail'>\r\n        <List>\r\n          <Item>\r\n            <span className='left'>商品名称:</span>\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>商品描述:</span>\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>商品价格:</span>\r\n            <span>{price}元</span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>所属分类:</span>\r\n            <span>\r\n              {cName1} {cName2 ? ' --> ' + cName2 : ''}\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>商品图片:</span>\r\n            <span>\r\n              {imgs.map((img) => (\r\n                <img\r\n                  key={img}\r\n                  src={BASE_IMG_URL + img}\r\n                  className='product-img'\r\n                  alt='img'\r\n                />\r\n              ))}\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>商品详情:</span>\r\n            <span dangerouslySetInnerHTML={{ __html: detail }}></span>\r\n          </Item>\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport ProductHome from './home'\r\nimport ProductAddUpdate from './add-update'\r\nimport ProductDetail from './detail'\r\n\r\nimport './product.less'\r\n// 产品路由\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path='/product' component={ProductHome} exact />\r\n        {/*路径完全匹配*/}\r\n        <Route path='/product/addupdate' component={ProductAddUpdate} />\r\n        <Route path='/product/detail' component={ProductDetail} />\r\n        <Redirect to='/product' />\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport PropType from 'prop-types'\r\nexport default class AddForm extends Component {\r\n  propType = {\r\n    setForm: PropType.func\r\n  }\r\n  formRef = React.createRef()\r\n  componentDidMount() {\r\n    this.props.setForm(this.formRef.current)\r\n  }\r\n  render() {\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 }, // 左侧label的宽度\r\n      wrapperCol: { span: 15 } // 右侧包裹的宽度\r\n    }\r\n    return (\r\n      <Form ref={this.formRef}>\r\n        <Form.Item\r\n          initialValue=''\r\n          rules={[{ required: true, message: '请输入角色名称！' }]}\r\n          name='roleName'\r\n          label='角色名称'\r\n          {...formItemLayout}\r\n        >\r\n          <Input placeholder='请输入角色名称' />\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Input, Tree, Form } from 'antd'\r\nimport menuList from '../../config/menuConfig'\r\nimport PropType from 'prop-types'\r\n\r\nexport default class AuthForm extends Component {\r\n  propType = {\r\n    role: PropType.object\r\n  }\r\n  formRef = React.createRef()\r\n  getTreeNodes = (menuList) => {\r\n    return [{ title: '平台', key: 'all', children: menuList }]\r\n  }\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      checkedKeys: [],\r\n      // 记录当前角色对象\r\n      role: []\r\n    }\r\n    this.treeNodes = this.getTreeNodes(menuList)\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    // 判断传入对象与当前记录的对象是否是同一个对象\r\n    if (nextProps.role !== prevState.role) {\r\n      return {\r\n        // 将刚传入的值赋值给已保存的值\r\n        checkedKeys: nextProps.role.menus,\r\n        role: nextProps.role\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  onCheck = (checkedKeys) => {\r\n    this.setState({ checkedKeys })\r\n  }\r\n  getMenus = () => this.state.checkedKeys\r\n  render() {\r\n    const { role } = this.props\r\n    const { checkedKeys } = this.state\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <Form.Item label='角色名称'>\r\n            <Input value={role.name} readOnly></Input>\r\n          </Form.Item>\r\n        </Form>\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onCheck}\r\n          treeData={this.treeNodes}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport { formateDate } from '../../utils/dateUtils'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\n// import memoryUtiles from '../../utils/memoryUtils'\r\n// import storageUtils from '../../utils/storageUtils'\r\nimport { reqRoles, reqAddRole, reqUpdateRole } from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-from'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../redux/actions'\r\n// 角色管理路由\r\nclass Role extends Component {\r\n  state = {\r\n    roles: [], // 所有角色的列表\r\n    role: {}, // 选中的role\r\n    isShowAdd: false, // 是否显示添加界面\r\n    isShowAuth: false // 是否显示设置权限界面\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.auth = React.createRef()\r\n  }\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render: (create_time) => formateDate(create_time)\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name'\r\n      }\r\n    ]\r\n  }\r\n  // 获取角色信息\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if (result.status === 0) {\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  }\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: (event) => {\r\n        // 点击行\r\n        // console.log('row onClick()', role)\r\n        // alert('点击行')\r\n        this.setState({\r\n          role\r\n        })\r\n      }\r\n    }\r\n  }\r\n  addRole = async () => {\r\n    this.form\r\n      .validateFields()\r\n      .then(async (result) => {\r\n        const res = await reqAddRole(result.roleName)\r\n        if (res.status !== 0) return message.error('错误了')\r\n        // this.getRoles()\r\n        const role = res.data\r\n        this.setState((state) => ({\r\n          roles: [...state.roles, role],\r\n          isShowAdd: false\r\n        }))\r\n      })\r\n      .catch((err) => {\r\n        message.error('请先填写字段！')\r\n      })\r\n  }\r\n  // 更新角色的回调函数\r\n  updateRole = async () => {\r\n    const role = this.state.role\r\n    // 得到最新的menus\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_name = this.props.user.username\r\n    role.auth_time = Date.now()\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status !== 0) return message.error('错误了！')\r\n\r\n    if (role._id === this.props.user.role_id) {\r\n      this.props.user = {}\r\n      // storageUtils.removeUser()\r\n      this.logout()\r\n      message.success('当前角色权限修改了，请重新登录')\r\n      this.props.history.replace('/login')\r\n    } else {\r\n      message.success('权限更新成功！')\r\n      this.setState({\r\n        isShowAuth: false,\r\n        roles: [...this.state.roles]\r\n      })\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.initColumn()\r\n    this.getRoles()\r\n  }\r\n  render() {\r\n    const { roles, role, isShowAdd, isShowAuth } = this.state\r\n    const title = (\r\n      <span>\r\n        <Button\r\n          type='primary'\r\n          onClick={() => this.setState({ isShowAdd: true })}\r\n        >\r\n          创建角色\r\n        </Button>\r\n        &nbsp;&nbsp;\r\n        <Button\r\n          type='primary'\r\n          disabled={!role._id}\r\n          onClick={() => this.setState({ isShowAuth: true })}\r\n        >\r\n          设置角色权限\r\n        </Button>\r\n      </span>\r\n    )\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{ defaultPageSize: PAGE_SIZE }}\r\n          rowSelection={{\r\n            type: 'radio',\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => {\r\n              // 选择某个radio时回调\r\n              this.setState({\r\n                role\r\n              })\r\n            }\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n        <Modal\r\n          title='添加角色'\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({ isShowAdd: false })\r\n            this.form.resetFields()\r\n          }}\r\n        >\r\n          <AddForm setForm={(form) => (this.form = form)} />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title='设置角色权限'\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({ isShowAuth: false })\r\n          }}\r\n        >\r\n          <AuthForm ref={this.auth} role={role} />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default connect((state) => ({ user: state.user }), { logout })(Role)\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, Select } from 'antd'\r\nimport PropType from 'prop-types'\r\nexport default class userForm extends Component {\r\n  propType = {\r\n    setForm: PropType.func\r\n  }\r\n  static propTypes = {\r\n    setForm: PropType.func.isRequired, // 用来传递form对象的函数\r\n    roles: PropType.array.isRequired,\r\n    user: PropType.object\r\n  }\r\n  formRef = React.createRef()\r\n  componentDidMount() {\r\n    this.props.setForm(this.formRef.current)\r\n    this.formRef.current.setFieldsValue({\r\n      ...this.props.user\r\n    })\r\n  }\r\n  componentDidUpdate() {\r\n    this.formRef.current.setFieldsValue({\r\n      ...this.props.user\r\n    })\r\n  }\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 }, // 左侧label的宽度\r\n      wrapperCol: { span: 15 } // 右侧包裹的宽度\r\n    }\r\n    const { roles, user } = this.props\r\n\r\n    return (\r\n      <Form ref={this.formRef}>\r\n        <Form.Item\r\n          initialValue=''\r\n          rules={[{ required: true, message: '请输入用户名！' }]}\r\n          name='username'\r\n          label='用户名'\r\n          {...formItemLayout}\r\n        >\r\n          <Input placeholder='请输入用户名' />\r\n        </Form.Item>\r\n        {user._id ? null : (\r\n          <Form.Item\r\n            initialValue=''\r\n            rules={[{ required: true, message: '请输入密码！' }]}\r\n            name='password'\r\n            label='密码'\r\n            {...formItemLayout}\r\n          >\r\n            <Input placeholder='请输入密码' type='password' />\r\n          </Form.Item>\r\n        )}\r\n\r\n        <Form.Item\r\n          initialValue=''\r\n          rules={[{ required: true, message: '请输入手机号！' }]}\r\n          name='phone'\r\n          label='手机号'\r\n          {...formItemLayout}\r\n        >\r\n          <Input placeholder='请输入手机号' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          initialValue=''\r\n          rules={[{ required: true, message: '请输入邮箱！' }]}\r\n          name='email'\r\n          label='邮箱'\r\n          {...formItemLayout}\r\n        >\r\n          <Input placeholder='请输入邮箱' type='email' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          initialValue=''\r\n          rules={[{ required: true, message: '请选择角色' }]}\r\n          name='role_id'\r\n          label='角色'\r\n          {...formItemLayout}\r\n        >\r\n          <Select>\r\n            {roles.map((role) => (\r\n              <Select.Option key={role._id} value={role._id}>\r\n                {role.name}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport { formateDate } from '../../utils/dateUtils'\r\nimport LinkButton from '../../components/link-button/index'\r\nimport {\r\n  reqDeleteUser,\r\n  reqUsers,\r\n  reqAddOrUpdateUser,\r\n  reqDeleteImg\r\n} from '../../api/index'\r\nimport UserForm from './user-form'\r\n// 用户路由\r\nexport default class User extends Component {\r\n  state = {\r\n    users: [], // 所有用户列表\r\n    roles: [], // 所有角色列表\r\n    isShow: false // 是否显示确认框\r\n  }\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username'\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email'\r\n      },\r\n\r\n      {\r\n        title: '电话',\r\n        dataIndex: 'phone'\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        render: (role_id) => this.roleNames[role_id]\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n          </span>\r\n        )\r\n      }\r\n    ]\r\n  }\r\n  /*\r\n  根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n   */\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    }, {})\r\n    // 保存\r\n    this.roleNames = roleNames\r\n  }\r\n  getUsers = async () => {\r\n    const result = await reqUsers()\r\n    if (result.status === 0) {\r\n      const { users, roles } = result.data\r\n      this.initRoleNames(roles)\r\n      this.setState({\r\n        users,\r\n        roles\r\n      })\r\n    }\r\n  }\r\n  showAdd = () => {\r\n    this.setState({ isShow: true })\r\n  }\r\n  showUpdate = (user) => {\r\n    this.user = user\r\n    this.setState({ isShow: true })\r\n  }\r\n  deleteUser = (user) => {\r\n    Modal.confirm({\r\n      title: `确认删除${user.username}么？`,\r\n      icon: <ExclamationCircleOutlined />,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id)\r\n        if (result.status !== 0) return message.error('删除失败！')\r\n        message.success('删除成功！')\r\n        this.getUsers()\r\n      }\r\n    })\r\n  }\r\n  addOrUpdateUser = () => {\r\n    this.form\r\n      .validateFields()\r\n      .then(async (user) => {\r\n        if (this.user) {\r\n          user._id = this.user._id\r\n        }\r\n        const result = await reqAddOrUpdateUser(user)\r\n        if (result.status !== 0) return message.error('失败')\r\n        message.success('成功')\r\n        this.form.resetFields()\r\n        this.getUsers()\r\n        this.setState({ isShow: false })\r\n      })\r\n      .catch((err) => {})\r\n  }\r\n  componentDidMount() {\r\n    this.getUsers()\r\n    this.initColumns()\r\n  }\r\n  render() {\r\n    const { users, roles, isShow } = this.state\r\n    const user = this.user || {}\r\n\r\n    const title = (\r\n      <Button type='primary' onClick={this.showAdd}>\r\n        创建用户\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          pagination={{ defaultPageSize: 2 }}\r\n        />\r\n\r\n        <Modal\r\n          title={user._id ? '修改用户' : '添加用户'}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() => {\r\n            this.form.resetFields()\r\n            this.setState({ isShow: false })\r\n          }}\r\n        >\r\n          <UserForm\r\n            setForm={(form) => (this.form = form)}\r\n            roles={roles}\r\n            user={user}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10] // 库存的数组\r\n  }\r\n  update = () => {\r\n    this.setState((state) => ({\r\n      sales: state.sales.map((sale) => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store - 1)\r\n        return pre\r\n      }, [])\r\n    }))\r\n  }\r\n\r\n  // 返回柱状图配置对象\r\n  getOptions = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: '销量',\r\n          type: 'bar',\r\n          data: sales\r\n        },\r\n        {\r\n          name: '库存',\r\n          type: 'bar',\r\n          data: stores\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  render() {\r\n    const { sales, stores } = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>\r\n            更新\r\n          </Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOptions(sales, stores)} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的折线图路由组件\r\n */\r\nexport default class Line extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10] // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState((state) => ({\r\n      sales: state.sales.map((sale) => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store - 1)\r\n        return pre\r\n      }, [])\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: '销量',\r\n          type: 'line',\r\n          data: sales\r\n        },\r\n        {\r\n          name: '库存',\r\n          type: 'line',\r\n          data: stores\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { sales, stores } = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>\r\n            更新\r\n          </Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的饼图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n  getOption = () => {\r\n    return {\r\n      title: {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '60%'],\r\n          data: [\r\n            { value: 335, name: '直接访问' },\r\n            { value: 310, name: '邮件营销' },\r\n            { value: 234, name: '联盟广告' },\r\n            { value: 135, name: '视频广告' },\r\n            { value: 1548, name: '搜索引擎' }\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '50%'],\r\n          data: [\r\n            { value: 335, name: '直接访问' },\r\n            { value: 310, name: '邮件营销' },\r\n            { value: 274, name: '联盟广告' },\r\n            { value: 235, name: '视频广告' },\r\n            { value: 400, name: '搜索引擎' }\r\n          ].sort(function (a, b) {\r\n            return a.value - b.value\r\n          }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{ height: 300 }} />\r\n        </Card>\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{ height: 300 }} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Order extends Component {\r\n  render() {\r\n    return <div>order</div>\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {setHeadTitle} from '../../redux/actions'\r\nimport './not-found.less'\r\n\r\n/*\r\n前台404页面\r\n */\r\nclass NotFound extends Component {\r\n\r\n  goHome = () => {\r\n    this.props.setHeadTitle('首页')\r\n    this.props.history.replace('/home')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={this.goHome}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {setHeadTitle}\r\n)(NotFound)","/**\r\n * 管理的路由组件\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { Layout } from 'antd'\r\n\r\n// import memoryUtils from '../../utils/memoryUtils'\r\nimport LeftNav from '../../components/left-nav/left-nav'\r\nimport Header from '../../components/header/header'\r\n// 路由组件\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\n// 图表\r\nimport Bar from '../charts/bar' // 柱状图\r\nimport Line from '../charts/line' // 折线图\r\nimport Pie from '../charts/pie' // 饼状图\r\n// 订单管理\r\nimport Order from '../order/order'\r\n// 404页面\r\nimport NotFound from '../not-found/not-found'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst { Footer, Sider, Content } = Layout\r\n\r\nclass Admin extends Component {\r\n  render() {\r\n    const user = this.props.user\r\n    // 判断是否存在user\r\n    if (!user || !user._id) {\r\n      // 没有登录，自动跳转\r\n      return <Redirect to='/login' />\r\n    } else {\r\n      return (\r\n        <Layout style={{ minHeight: '100%' }}>\r\n          <Sider>\r\n            <LeftNav />\r\n          </Sider>\r\n          <Layout>\r\n            <Header> Hello {user.username}</Header>\r\n            <Content style={{ margin: 20, backgroundColor: '#fff' }}>\r\n              <Switch>\r\n                <Redirect exact from='/' to='/home'></Redirect>\r\n                <Route path='/home' component={Home} />\r\n                <Route path='/category' component={Category} />\r\n                <Route path='/product' component={Product} />\r\n                <Route path='/role' component={Role} />\r\n                <Route path='/user' component={User} />\r\n                <Route path='/charts/bar' component={Bar} />\r\n                <Route path='/charts/line' component={Line} />\r\n                <Route path='/charts/pie' component={Pie} />\r\n                <Route path='/order' component={Order} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center', color: '#ccc' }}>\r\n              推荐使用咕咕浏览器获得极致体验\r\n            </Footer>\r\n          </Layout>\r\n        </Layout>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default connect((state) => ({ user: state.user }), {})(Admin)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\n\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.png'\r\n\r\n/*\r\nimport { reqLogin } from '../../api/index.js'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\n*/\r\nimport { login } from '../../redux/actions'\r\n\r\n/**\r\n * 登录的路由组件\r\n */\r\n\r\nclass Login extends Component {\r\n  // 创建表单实例\r\n  formRef = React.createRef()\r\n\r\n  // 表单提交事件\r\n  handleSubmit = async () => {\r\n    // 此事件只有表单验证通过后才会触发\r\n    // console.log(this.formRef.current)\r\n    // 调用 getFieldValue 方法获取Form.Item.name 的值 （即username和password）\r\n    const { getFieldValue } = this.formRef.current\r\n    // 解构出账号密码\r\n    const { username, password } = getFieldValue()\r\n    // 调用分发异步action的函数\r\n    // 发送异步请求\r\n    this.props.login(username, password)\r\n    /*\r\n    let res = await reqLogin(username, password)\r\n    if (res.status === 0) {\r\n      // 成功\r\n      message.success('登录成功')\r\n      // 跳转之前保存user\r\n      const user = res.data\r\n      memoryUtils.user = user // 存到内存中\r\n      storageUtils.saveUser(user) // 存到Local中\r\n      // 跳转到后台页面(不需要回退)\r\n      this.props.history.replace('/home')\r\n    }else {\r\n      // 失败 提示错误信息\r\n      message.error(res.msg)\r\n    }*/\r\n  }\r\n  // 自定义验证-密码\r\n  // AntD4中已经没有callback回调函数了，而是返回Promise对象\r\n  validatePwd = (rule, value) => {\r\n    // value 表示当前输入框传入的值\r\n    if (!value) {\r\n      return Promise.reject('密码必须输入')\r\n    } else if (value.length < 5) {\r\n      return Promise.reject('密码长度不能小于4')\r\n    } else if (value.length > 12) {\r\n      return Promise.reject('密码长度不能大于12')\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      return Promise.reject('密码必须是大写字母、小写字母或下划线组成')\r\n    } else {\r\n      return Promise.resolve()\r\n    }\r\n  }\r\n  render() {\r\n    // 如果用户已经登录自动跳转管理界面\r\n    // const user = memoryUtils.user\r\n\r\n    const user = this.props.user\r\n    if (user && user._id) {\r\n      return <Redirect to='/home' />\r\n    }\r\n    const errorMsg = this.props.user.errorMsg\r\n\r\n    return (\r\n      <div className='login'>\r\n        <header className='login-header'>\r\n          <img src={logo} />\r\n          <h1>React项目：谷粒商城</h1>\r\n        </header>\r\n        <section className='login-content'>\r\n          <div className={errorMsg ? 'error-msg show' : 'error-msg'}>\r\n            {errorMsg}\r\n          </div>\r\n          <h2>用户登录</h2>\r\n          <Form\r\n            name='normal_login'\r\n            className='login-form'\r\n            // 为表单添加引用\r\n            ref={this.formRef}\r\n            // 为表单添加校检完成的事件\r\n            onFinish={this.handleSubmit}\r\n          >\r\n            <Form.Item\r\n              name='username'\r\n              // 声明式验证\r\n              rules={[\r\n                { required: true, whitespace: true, message: '请输入用户名' },\r\n                { min: 4, message: '用户名最少4位' },\r\n                { max: 12, message: '用户名最多12位' },\r\n                {\r\n                  pattern: /^[a-zA-Z0-9_]+$/,\r\n                  message: '用户名必须是大写字母、小写字母或下划线组成'\r\n                }\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={\r\n                  <UserOutlined\r\n                    className='site-form-item-icon'\r\n                    style={{ color: 'rgba(0,0,0,.25)' }}\r\n                  />\r\n                }\r\n                placeholder='Username'\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name='password'\r\n              rules={[{ validator: this.validatePwd }]}\r\n            >\r\n              <Input\r\n                prefix={\r\n                  <LockOutlined\r\n                    className='site-form-item-icon'\r\n                    style={{ color: 'rgba(0,0,0,.25)' }}\r\n                  />\r\n                }\r\n                type='password'\r\n                placeholder='Password'\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                className='login-form-button'\r\n              >\r\n                登录\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default connect((state) => ({ user: state.user }), { login })(Login)\r\n","/**\r\n * 应用根组件\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\n\r\nimport Admin from './pages/admin/admin';\r\nimport Login from './pages/login/login';\r\n\r\n\r\nexport default class App extends Component {\r\n  render () {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n","/**\r\n * 用来根据老的state和指定的action生成并返回新的state的函数\r\n */\r\nimport storageUtils from '../utils/storageUtils'\r\nimport { SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG, RESET_USER } from './action-type'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst initHeadTitle = '首页'\r\n// 用来管理头部标题的reducer\r\nfunction headTitle (state = initHeadTitle, action) {\r\n  switch (action.type) {\r\n    case SET_HEAD_TITLE:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n// 用来管理用户的reducer\r\nconst initUser = storageUtils.getUser()\r\nfunction user (state = initUser, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USER:\r\n      console.log(action.user);\r\n      return action.user\r\n    case SHOW_ERROR_MSG:\r\n      const errorMsg = action.errorMsg\r\n      return { ...state, errorMsg }\r\n    case RESET_USER:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n// 向外默认暴露的是合并产生的总的reducer函数\r\n// 管理的总的结构：\r\n/**\r\n{\r\n  headTitle:'首页',\r\n  user:{}\r\n}\r\n*/\r\nexport default combineReducers({\r\n  headTitle,\r\n  user\r\n})","/**\r\n * redux核心管理对象\r\n */\r\n// 向外默认暴露store\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport reducer from './reducer'\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))","/**\r\n * 入口文件\r\n */\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport ReactDOM from 'react-dom';\r\n// import memoryUtils from './utils/memoryUtils'\r\n// import storageUtils from './utils/storageUtils'\r\nimport App from './App';\r\nimport store from './redux/store'\r\n// 读取Local中读取，保存到内存中\r\n// const user = storageUtils.getUser()\r\n// memoryUtils.user = user\r\nReactDOM.render(\r\n  (<Provider store={store}><App /></Provider>),\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}